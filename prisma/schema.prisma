// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique @db.VarChar(30)
  password String
}

model Product {
  id             Int                    @id @default(autoincrement())
  name           String                 @unique @db.VarChar(30)
  stock          Int                    @default(0)
  category       Category               @relation(fields: [categoryId], references: [id])
  categoryId     Int
  unit           Unit                   @relation(fields: [unitId], references: [id])
  unitId         Int
  suppliers      ProductsPerSuppliers[]
  stockMovements StockMovement[]

  @@map("products")
}

model StockMovement {
  productId      Int         @id
  dateAction     DateTime
  typeAction     ActionTypes
  amountInvolved Int
  dollarAtDate   Int
  totalPrice     Int
  Product        Product     @relation(fields: [productId], references: [id])

  @@map("stockmovements")
}

enum ActionTypes {
  WITHDRAW
  DEPOSIT
}

model Category {
  id          Int       @id @default(autoincrement())
  description String    @db.VarChar(30)
  products    Product[]

  @@map("categories")
}

model Unit {
  id          Int       @id @default(autoincrement())
  description String    @unique @db.VarChar(30)
  products    Product[]

  @@map("units")
}

model Supplier {
  id       Int                    @id @default(autoincrement())
  name     String                 @unique
  email    String?                @unique
  tel      String?
  address  String?
  products ProductsPerSuppliers[]

  @@map("suppliers")
}

model ProductsPerSuppliers {
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  supplier   Supplier @relation(fields: [supplierId], references: [id])
  supplierId Int

  @@id([productId, supplierId])
}
